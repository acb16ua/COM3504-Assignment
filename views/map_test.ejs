
<html>
<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <title><%= title %></title>

    <!--Bootstrap 4 CDN-->
    <link rel="stylesheet" href="stylesheets/bootstrap.css">

    <!--Font Awesome CDN-->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css"
          integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">

    <!--Custom style-->
    <link rel='stylesheet' href='stylesheets/style.css'/>

    <style>
        /* Always set the map height explicitly to define the size of the div
         * element that contains the map. */
        #map {
            height: 100%;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 300px;
            margin: 0;
            padding: 0;
        }
    </style>




    <link rel="manifest" href="/manifest.json">
    <!-- Add to home screen for Safari on iOS -->
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Sniped!">
    <link rel="apple-touch-icon" href="images/icons/icon-180x180.png">
    <meta name="msapplication-TileImage" content="images/icons/icon-180x180.png">
    <meta name="msapplication-TileColor" content="#2F3BA2">


</head>
<body>


<div id="locationField">
    <input id="autocomplete"
           placeholder="Enter your address"
           onFocus="geolocate()"
           type="text"/>
</div>

<table id="address">
    <tr>
        <td class="label">Street address</td>
        <td class="slimField"><input class="field" id="street_number" disabled="true"/></td>
        <td class="wideField" colspan="2"><input class="field" id="route" disabled="true"/></td>
    </tr>
    <tr>
        <td class="label">City</td>
        <td class="wideField" colspan="3"><input class="field" id="locality" disabled="true"/></td>
    </tr>
    <tr>
        <td class="label">State</td>
        <td class="slimField"><input class="field" id="administrative_area_level_1" disabled="true"/></td>
        <td class="label">Zip code</td>
        <td class="wideField"><input class="field" id="postal_code" disabled="true"/></td>
    </tr>
    <tr>
        <td class="label">Country</td>
        <td class="wideField" colspan="3"><input class="field" id="country" disabled="true"/></td>
    </tr>
</table>



<script>
    // This sample uses the Autocomplete widget to help the user select a
    // place, then it retrieves the address components associated with that
    // place, and then it populates the form fields with those details.
    // This sample requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script
    // src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

    var placeSearch, autocomplete;

    var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
    };

    function initAutocomplete() {
        // Create the autocomplete object, restricting the search predictions to
        // geographical location types.
        autocomplete = new google.maps.places.Autocomplete(
            document.getElementById('autocomplete'), {types: ['geocode']});

        // Avoid paying for data that you don't need by restricting the set of
        // place fields that are returned to just the address components.
        autocomplete.setFields(['address_component']);

        // When the user selects an address from the drop-down, populate the
        // address fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
            document.getElementById(component).value = '';
            document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details,
        // and then fill-in the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
            var addressType = place.address_components[i].types[0];
            if (componentForm[addressType]) {
                var val = place.address_components[i][componentForm[addressType]];
                document.getElementById(addressType).value = val;
            }
        }
    }

    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var geolocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var circle = new google.maps.Circle(
                    {center: geolocation, radius: position.coords.accuracy});
                autocomplete.setBounds(circle.getBounds());
            });
        }
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBDO7vtBDfFw_GLTR7JVQFT1CP0eUyO6Uk&libraries=places&callback=initAutocomplete"
        async defer></script>










<!--Profile container-->

<!--<div id="mapid"></div>-->


<!--<script>-->
<!--    var mymap = L.map('mapid').setView([51.505, -0.09], 13);-->

<!--    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {-->
<!--        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',-->
<!--        maxZoom: 18,-->
<!--        id: 'mapbox.streets',-->
<!--        accessToken: 'pk.eyJ1IjoibGVvdWRkaGF2IiwiYSI6ImNqdnB3MzF0MDBlbjMzem96cG4zMXdidWEifQ.B9ozbpeTPRLk9OWNxJaCVQ'-->
<!--    }).addTo(mymap);-->

<!--    var marker = L.marker([51.5, -0.09]).addTo(mymap);-->

<!--    var circle = L.circle([51.508, -0.11], {-->
<!--        color: 'red',-->
<!--        fillColor: '#f03',-->
<!--        fillOpacity: 0.5,-->
<!--        radius: 500-->
<!--    }).addTo(mymap);-->

<!--    var polygon = L.polygon([-->
<!--        [51.509, -0.08],-->
<!--        [51.503, -0.06],-->
<!--        [51.51, -0.047]-->
<!--    ]).addTo(mymap);-->

<!--    $("a[href='#menu1']").on('shown.bs.tab', function(e) {-->
<!--        mymap.invalidateSize();-->
<!--    });-->
<!--</script>-->
<script src="javascripts/index.js"></script>
<script src="javascripts/jquery-3.3.1.js"></script>
<script src="javascripts/bootstrap.js"></script>
<script src="javascripts/app.js"></script>

</body>
</html>
